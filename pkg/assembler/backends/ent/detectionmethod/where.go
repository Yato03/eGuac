// Code generated by ent, DO NOT EDIT.

package detectionmethod

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
	"github.com/guacsec/guac/pkg/assembler/backends/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldLTE(FieldID, id))
}

// DetectionID applies equality check predicate on the "detection_id" field. It's identical to DetectionIDEQ.
func DetectionID(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEQ(FieldDetectionID, v))
}

// Method applies equality check predicate on the "method" field. It's identical to MethodEQ.
func Method(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEQ(FieldMethod, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEQ(FieldDescription, v))
}

// Effectiveness applies equality check predicate on the "effectiveness" field. It's identical to EffectivenessEQ.
func Effectiveness(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEQ(FieldEffectiveness, v))
}

// DetectionIDEQ applies the EQ predicate on the "detection_id" field.
func DetectionIDEQ(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEQ(FieldDetectionID, v))
}

// DetectionIDNEQ applies the NEQ predicate on the "detection_id" field.
func DetectionIDNEQ(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNEQ(FieldDetectionID, v))
}

// DetectionIDIn applies the In predicate on the "detection_id" field.
func DetectionIDIn(vs ...string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldIn(FieldDetectionID, vs...))
}

// DetectionIDNotIn applies the NotIn predicate on the "detection_id" field.
func DetectionIDNotIn(vs ...string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNotIn(FieldDetectionID, vs...))
}

// DetectionIDGT applies the GT predicate on the "detection_id" field.
func DetectionIDGT(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldGT(FieldDetectionID, v))
}

// DetectionIDGTE applies the GTE predicate on the "detection_id" field.
func DetectionIDGTE(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldGTE(FieldDetectionID, v))
}

// DetectionIDLT applies the LT predicate on the "detection_id" field.
func DetectionIDLT(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldLT(FieldDetectionID, v))
}

// DetectionIDLTE applies the LTE predicate on the "detection_id" field.
func DetectionIDLTE(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldLTE(FieldDetectionID, v))
}

// DetectionIDContains applies the Contains predicate on the "detection_id" field.
func DetectionIDContains(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldContains(FieldDetectionID, v))
}

// DetectionIDHasPrefix applies the HasPrefix predicate on the "detection_id" field.
func DetectionIDHasPrefix(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldHasPrefix(FieldDetectionID, v))
}

// DetectionIDHasSuffix applies the HasSuffix predicate on the "detection_id" field.
func DetectionIDHasSuffix(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldHasSuffix(FieldDetectionID, v))
}

// DetectionIDIsNil applies the IsNil predicate on the "detection_id" field.
func DetectionIDIsNil() predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldIsNull(FieldDetectionID))
}

// DetectionIDNotNil applies the NotNil predicate on the "detection_id" field.
func DetectionIDNotNil() predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNotNull(FieldDetectionID))
}

// DetectionIDEqualFold applies the EqualFold predicate on the "detection_id" field.
func DetectionIDEqualFold(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEqualFold(FieldDetectionID, v))
}

// DetectionIDContainsFold applies the ContainsFold predicate on the "detection_id" field.
func DetectionIDContainsFold(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldContainsFold(FieldDetectionID, v))
}

// MethodEQ applies the EQ predicate on the "method" field.
func MethodEQ(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEQ(FieldMethod, v))
}

// MethodNEQ applies the NEQ predicate on the "method" field.
func MethodNEQ(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNEQ(FieldMethod, v))
}

// MethodIn applies the In predicate on the "method" field.
func MethodIn(vs ...string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldIn(FieldMethod, vs...))
}

// MethodNotIn applies the NotIn predicate on the "method" field.
func MethodNotIn(vs ...string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNotIn(FieldMethod, vs...))
}

// MethodGT applies the GT predicate on the "method" field.
func MethodGT(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldGT(FieldMethod, v))
}

// MethodGTE applies the GTE predicate on the "method" field.
func MethodGTE(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldGTE(FieldMethod, v))
}

// MethodLT applies the LT predicate on the "method" field.
func MethodLT(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldLT(FieldMethod, v))
}

// MethodLTE applies the LTE predicate on the "method" field.
func MethodLTE(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldLTE(FieldMethod, v))
}

// MethodContains applies the Contains predicate on the "method" field.
func MethodContains(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldContains(FieldMethod, v))
}

// MethodHasPrefix applies the HasPrefix predicate on the "method" field.
func MethodHasPrefix(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldHasPrefix(FieldMethod, v))
}

// MethodHasSuffix applies the HasSuffix predicate on the "method" field.
func MethodHasSuffix(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldHasSuffix(FieldMethod, v))
}

// MethodIsNil applies the IsNil predicate on the "method" field.
func MethodIsNil() predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldIsNull(FieldMethod))
}

// MethodNotNil applies the NotNil predicate on the "method" field.
func MethodNotNil() predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNotNull(FieldMethod))
}

// MethodEqualFold applies the EqualFold predicate on the "method" field.
func MethodEqualFold(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEqualFold(FieldMethod, v))
}

// MethodContainsFold applies the ContainsFold predicate on the "method" field.
func MethodContainsFold(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldContainsFold(FieldMethod, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldContainsFold(FieldDescription, v))
}

// EffectivenessEQ applies the EQ predicate on the "effectiveness" field.
func EffectivenessEQ(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEQ(FieldEffectiveness, v))
}

// EffectivenessNEQ applies the NEQ predicate on the "effectiveness" field.
func EffectivenessNEQ(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNEQ(FieldEffectiveness, v))
}

// EffectivenessIn applies the In predicate on the "effectiveness" field.
func EffectivenessIn(vs ...string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldIn(FieldEffectiveness, vs...))
}

// EffectivenessNotIn applies the NotIn predicate on the "effectiveness" field.
func EffectivenessNotIn(vs ...string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNotIn(FieldEffectiveness, vs...))
}

// EffectivenessGT applies the GT predicate on the "effectiveness" field.
func EffectivenessGT(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldGT(FieldEffectiveness, v))
}

// EffectivenessGTE applies the GTE predicate on the "effectiveness" field.
func EffectivenessGTE(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldGTE(FieldEffectiveness, v))
}

// EffectivenessLT applies the LT predicate on the "effectiveness" field.
func EffectivenessLT(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldLT(FieldEffectiveness, v))
}

// EffectivenessLTE applies the LTE predicate on the "effectiveness" field.
func EffectivenessLTE(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldLTE(FieldEffectiveness, v))
}

// EffectivenessContains applies the Contains predicate on the "effectiveness" field.
func EffectivenessContains(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldContains(FieldEffectiveness, v))
}

// EffectivenessHasPrefix applies the HasPrefix predicate on the "effectiveness" field.
func EffectivenessHasPrefix(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldHasPrefix(FieldEffectiveness, v))
}

// EffectivenessHasSuffix applies the HasSuffix predicate on the "effectiveness" field.
func EffectivenessHasSuffix(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldHasSuffix(FieldEffectiveness, v))
}

// EffectivenessIsNil applies the IsNil predicate on the "effectiveness" field.
func EffectivenessIsNil() predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldIsNull(FieldEffectiveness))
}

// EffectivenessNotNil applies the NotNil predicate on the "effectiveness" field.
func EffectivenessNotNil() predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldNotNull(FieldEffectiveness))
}

// EffectivenessEqualFold applies the EqualFold predicate on the "effectiveness" field.
func EffectivenessEqualFold(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldEqualFold(FieldEffectiveness, v))
}

// EffectivenessContainsFold applies the ContainsFold predicate on the "effectiveness" field.
func EffectivenessContainsFold(v string) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.FieldContainsFold(FieldEffectiveness, v))
}

// HasCwe applies the HasEdge predicate on the "cwe" edge.
func HasCwe() predicate.DetectionMethod {
	return predicate.DetectionMethod(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, CweTable, CwePrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCweWith applies the HasEdge predicate on the "cwe" edge with a given conditions (other predicates).
func HasCweWith(preds ...predicate.CWE) predicate.DetectionMethod {
	return predicate.DetectionMethod(func(s *sql.Selector) {
		step := newCweStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.DetectionMethod) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.DetectionMethod) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.DetectionMethod) predicate.DetectionMethod {
	return predicate.DetectionMethod(sql.NotPredicates(p))
}
